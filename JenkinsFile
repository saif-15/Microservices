pipeline {
  agent {
    docker {
      image 'shady15/maven-java-17-image:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
      //  git branch: 'master', url: 'https://github.com/saif-15/Microservices.git'
      }
    }
    stage('Build and Test') {
      environment {
         REGISTRY_CREDENTIALS = credentials('docker-credentials')
      }
      steps {
        script {
           docker.withRegistry('https://index.docker.io/v1/', "docker-credentials") {
               sh 'mvn clean install'
              // build the project and create a JAR file
               sh 'mvn clean package -P build-docker-image'
          }
        }
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.81.255.141:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
  }
}
